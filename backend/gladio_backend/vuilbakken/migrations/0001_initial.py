# Generated by Django 5.1.4 on 2024-12-19 15:22

import django.db.models.deletion
from django.db import migrations, models
from django.utils.timezone import datetime

def create_test_data(apps, schema_editor):
    # Get models using apps.get_model to avoid circular imports during migrations
    Edition = apps.get_model("vuilbakken", "Edition")
    Zone = apps.get_model("vuilbakken", "Zone")
    GridBlock = apps.get_model("vuilbakken", "GridBlock")
    Container = apps.get_model("vuilbakken", "Container")
    ContainerCycleCounter = apps.get_model("vuilbakken", "ContainerCycleCounter")

    # Create an Edition
    edition_2024 = Edition.objects.create(year=datetime(2024, 1, 1))

    # Create Zones
    zone_red = Zone.objects.create(name="Red Zone", color="Red")
    zone_blue = Zone.objects.create(name="Blue Zone", color="Blue")

    # Create GridBlocks
    grid_block_1 = GridBlock.objects.create(x=10, y=15, edition=edition_2024, zone=zone_red)
    grid_block_2 = GridBlock.objects.create(x=20, y=25, edition=edition_2024, zone=zone_blue)

    # Create Containers
    container_1 = Container.objects.create(container_number="C001")
    container_2 = Container.objects.create(container_number="C002")
    container_3 = Container.objects.create(container_number="C003")

    # Create ContainerCycleCounters
    ContainerCycleCounter.objects.create(
        number_of_times_emptied=5, day=1, container=container_1, zone=zone_red
    )
    ContainerCycleCounter.objects.create(
        number_of_times_emptied=3, day=2, container=container_2, zone=zone_blue
    )
    ContainerCycleCounter.objects.create(
        number_of_times_emptied=7, day=1, container=container_3, zone=zone_red
    )
    ContainerCycleCounter.objects.create(
        number_of_times_emptied=2, day=2, container=container_3, zone=zone_blue
    )

class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Container',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('container_number', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Edition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('color', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='GridBlock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('x', models.IntegerField()),
                ('y', models.IntegerField()),
                ('edition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vuilbakken.edition')),
                ('zone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vuilbakken.zone')),
            ],
        ),
        migrations.CreateModel(
            name='ContainerCycleCounter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_of_times_emptied', models.IntegerField()),
                ('day', models.IntegerField()),
                ('container', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vuilbakken.container')),
                ('zone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vuilbakken.zone')),
            ],
        ),
        migrations.RunPython(create_test_data),
    ]
